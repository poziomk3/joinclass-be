openapi: 3.0.3
info:
  title: JoinClass API
  version: 1.0.0
  description: |
    Backend API for managing users, rooms, assignments, submissions, and grading.
    Google SSO is used for authentication.

servers:
  - url: http://localhost:8080
    description: Local Dev

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    GoogleUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        name:
          type: string
        googleId:
          type: string
        profileImageUrl:
          type: string
        lastLogin:
          type: string
          format: date-time

    Room:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        ownerId:
          type: string
          format: uuid

    Assignment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date-time
        fileUrl:
          type: string
        roomId:
          type: string
          format: uuid

    Submission:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assignmentId:
          type: string
          format: uuid
        authorId:
          type: string
          format: uuid
        fileUrl:
          type: string
        comment:
          type: string
        submittedAt:
          type: string
          format: date-time

    Grade:
      type: object
      properties:
        id:
          type: string
          format: uuid
        score:
          type: number
          format: float
        feedback:
          type: string
        gradedAt:
          type: string
          format: date-time
        fileUrl:
          type: string
        gradedById:
          type: string
          format: uuid

paths:

  /users/me:
    get:
      summary: Get current authenticated user
      operationId: getCurrentUser
      responses:
        '200':
          description: Current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleUser'

  /rooms:
    get:
      summary: Get rooms owned by current user
      operationId: getMyRooms
      responses:
        '200':
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'

    post:
      summary: Create a new room
      operationId: createRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
      responses:
        '201':
          description: Room created

  /rooms/{roomId}/join:
    post:
      summary: Join a room by ID
      operationId: joinRoom
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Joined

  /rooms/{roomId}/assignments:
    get:
      summary: Get assignments in room
      operationId: getAssignmentsInRoom
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of assignments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'

    post:
      summary: Create assignment in room
      operationId: createAssignment
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      responses:
        '201':
          description: Assignment created

  /assignments/{assignmentId}/submissions:
    get:
      summary: Get all submissions for an assignment
      operationId: getSubmissions
      parameters:
        - name: assignmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of submissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submission'

    post:
      summary: Submit a solution
      operationId: submitSolution
      parameters:
        - name: assignmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
      responses:
        '201':
          description: Submission saved

  /submissions/{submissionId}/grade:
    post:
      summary: Grade a submission
      operationId: gradeSubmission
      parameters:
        - name: submissionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
      responses:
        '200':
          description: Graded successfully
